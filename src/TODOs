- Add a way to customize the results file
    Time only once (not on every line)
        Time,MD5/ID,Group,Trial#,Screen#,Label,Controller,
    pc:                                                     PennElementType,PennElementName,Parameter,Value
- Add a Wheel?
- setVar and var.set behave differently in a number of ways, in particular when global
- getVar in PennController().log is not re-evaluated upon repetition of trial
- Add the option to pass a number as a parameter to wait for timeout
    >  Generalize 'wait'
- Revise selector.shuffle: messes up when contains printed + unprinted elements
- AddTable sometimes doesn't work with Google Spreadsheet (when some cells are numbers?)
- ?Revise dropdown.shuffle: not random enough as is
- Add support for .log for Headers and for Footers
- Add PennController.GetGroup([table]) returning a LazyString (placeholder for a Var):
    class LazyString extends String {
        constructor(f){
            if (typeof(f)!="function") throw Error("LazyString's parameter should be a function!");
            super(f());
            Object.defineProperty(this, "value", {get() { return f() }});
            this.type = "Var";
            this._promises = [];
        }
    }
    var GetGroup = () => new LazyString( ()=>Date.now() )
- Add shuffle for Scales
- Add a (Copy) Report option in the debugger, to use on the forums
- Go through emails and forum topics to list more to-do's (not enough here already)
- Fix how (undefined) order interacts with var items = ... when some items are PennController and some are not
- newIbexQuestion("").settings.q("...").print().wait()
- Add PennController.GetFPS()
- Shuffle and containers: removing after shuffling removes the wrong element
- Add newCanvas(getElement())?
- Add newRow( "text" , newText("name", "text") , newImage("http://.../") ).settings.spacing("33px")


- fix "top|middle at ..." in .print (shouldn't subtract whole height + "right" doesn't work?)   <   ??
- Remove elements printed globally (.print(x,y)) at the end of trials   <   ??

- Get rid of .settings? [Maybe not]


- DONE: Multiple Key elements in a single trial only log the last one
    (NOT DONE) > Actually it's a complete mess, should juss rewrite the whole log thing
- DONE: Add a MouseTracker
- DONE(?): bug with newText in Canvas when reprinted
- DONE: Add .unselect to Scale
- DONE: Add option "loop" to audio.play?
- DONE: Make it possible to pass window coordinates for tooltip.print
- DONE: Make it possible to give a label to non-Penncontroller Template-generated trials
- DONE: Handle cross-table groups
- DONE: Handle server.py requests...
- DONE: Store key presses as key names instead of key codes? (give option)
- PARTLY DONE WITH PRINT(X,Y): Create a Canvas for the whole page by default, and make .print("center at 50%", "center at 50%") possible?
        > getCanvas("screen")? getCanvas(PennController)? getCanvas(PennController.trial)? getCanvas(PennController.screen)?
- DONE: Make it possible to use custom filenames for audio recordings
- DONE: Make debug popin appear by default?
- DONE: Implement window.onerror and new Proxy on PennController objects to track errors and print in debug
- DONE: Add the "disabled" class to all disabled elements
- DONE: Rehaul of Timer element (use requestAnimationFrame)  
- DONE: Revise tests: redundant layers + Var elements not evaluated on one layer, failing tests that should be successful
- DONE: FIX SELECTION OF ELEMENTS (IN PARTICULAR SELECTORS) WHEN NOT DISPLAYED
- DONE: Replace keydown with keypress in selectors
- DONE: Re-order timestamp in logged .print
- DONE: Fix click/key mismatch in selector.wait

- Multiple references?      getText("textA","textB").settings.center()
- Make it possible to pass elements as tooltip content?

KAJSA'S BUG [**FIXED**]:
    SOME ELEMENTS IN THE MIDDLE OF THE SPREADSHEET HAVE DIFFERENT LABELS
    IBEX'S INTERNAL MUNGGROUP + LATINSQUARE FUNCTIONS ARE SIMILAR TO FEEDITEMS:
    THEY GROUP THE ITEMS IN AN OBJECT, INDEXING THEM BY THEIR GROUP LABEL AND THEN FLATTEN THEM INTO AN ARRAY
    PROBLEM ARISES WHEN GROUP IN FIRST ROW OF FIRST FEEDITEMS IS DIFFERENT FROM FIRST ROW OF LATER FEEDITEMS
        > THE TWO FEEDITEMS ARE NOT ORDERED IN SYNC
        > + IF GROUP LABELS OF LATER FEEDITEMS ARE INTERMEDIATE AND # OF ROW IS NOT MODULO-CONSISTENT, IT SHIFTS THE LATIN SQUARE CONF
    SOLUTION?
        MODIFY-RUNNING-ORDER?
        NEED TO KEEP TRACK OF FEEDING (NOT ALL ITEMS GENERATED BY FEEDITEMS ARE PENNCONTROLLER ITEMS)
        PRE-PARSE THE TABLE?


BUG WITH FEEDITEMS DURING RUTGERS' WORKSHOP [**FIXED**]
    >> FIX IT!!

KNOWN BUGS/ERRORS/ISSUES
    - Sometimes templates do not work?
    - No support for OGG files on Safari 12
    - PennController does not work on Safari <12
    - Chrome & Safari require an interaction before the first audio is played (newer versions)


- fix voicerecorder with Chrome
    > certificate problem, fixing requires installing a certificate (tell Alex)

- add the drag'n'drop element (but what/when to log?)


- PRIORITY NOTES:                                                               [ Not happened in a while... ]
    >   Conflict between AUDIO and IFRAME??? > Sometimes
            >> MAYBE NOT DUE TO IFRAME, BUT PROBLEM MORE GENERALLY...?

- Fix what happens when no host and no zip provided


- Mouse
    > Save mouse location on click events
    > Make it possible to save any click < in Mouse instruction?
    PennController.mouse
                .settings.record("clickLocation", "clickInstruction", "hoverLocation", "hoverInstruction")
    PennController.mouse
                .waitHover( PennController.image("imgMyImage") )
                .waitClick( PennController.image("imgMyImage") )
    PennController.mouse
                .test.hover( PennController.image("imgMyImage") )

- Add a .background method for Canvas, to specify color/image background

- Add a .smartResize method for Canvas that updates the coordinates and sizes of the elements it contains?

- Add some way to LOOP instructions?
    > In particular, trigger an instruction EACH TIME a key is pressed (t.key("FJ").whenever( t("imgBeach").hide() )

- Write the Screen Instruction to prevent added elements from showing up
    > play with the _addElementTo function

- Add a MOUSE Instruction?
        > record position

- Integrate an instruction equivalent to the DashedSentence controller?

- Add parameters to the WAIT function of AUDIO
    on playstart or playend or stop < ?





IN PROGRESS     OBSOLETE
- Add a SHUFFLE method to ComplexInstr (already implemented in selector)        < not sure it's needed
    can pass indexes/instructions as parameters
    e.g.    t( t("image1.png").id("i1"), t("image2.png").id("i2"),   t("<br>"),   t("image3.png").id("i3"), t("image4.png").id("i4") ).shuffle(t("i1"),t("i2"),t("i3"),t("i4"))
    >> also add a SAVE method to save the order of each instruction?



MAYBE
- Add a general 'TIMEOUT: DELAY' settings
    Each instruction is done after DELAY after it was run (if not already done)

- Add a first trial that measures latencies?


// Below release 1.1
DONE
    - youtube command stop restarts instead of (really) stopping for good
DONE
    - Replace shuffleSequence and stuff [someday; PARTLY DONE]
    - Add a 'reprint' (or 'refresh'?) command that re-prints the element where it is
DONE
    - Revise Selector's frame rendering (shifted, spacing)
DONE
    - Fix tooltip's positioning
DONE
    - String parameters for keys shouldn't be evaluated as charCode first (e.g. newKey("key", "123456789"))
DONE
    - Make it possible to print Canvas from top-left corner of the screen
DONE
    - Add settings.callback to Button and Key
DONE
    - Add .select to Scale


// Below release 1.0
DONE
    - Added options "left" and "right" to settings commands .labelsPosition
DONE
    - Added setting commands checkboxWarning, inputWarning and radioWarning to Html element
DONE
    - Add .settings.log as a default for printing (canvas, image and text)
DONE
    - Revise the optional definition of shuffleSequence (now runs in order defined)
DONE
    - Make PennController add items to the items variable wihtout being embedded (+ .label method)
DONE
    - Standard settings commands .after, .before, .center, .left and .right now update even after action .print
DONE
    - Add duration for sliders
DONE
    - Add scale.settings.label(index, element)  (better than label? revise settings.labels for settings.labelsPosition?)


// Below beta 0.4
DONE
    - Add options for scale.settings.log (last, first, etc.)
DONE
    - Also add a log entry when no choice was made
DONE
    - Add a VIDEO Instruction


// Below beta 0.3

BETA 0.3
    * Proceeded to complete engine overhaul
    * Default prefix is now 'Elements' (e.g. PennController.Elements.newText("myText", "hello") )
    * Fixed ResetPrefix (was testing type with "text" insteand of "string")
    * New format for saved lines (now [ElementType, ElementName, Parameter, Value, EventTime, Comments])
    * Default commands are now specific to a trial
    * Printed elements are now all embedded in a container DIV and assigned classes based on their type and their name
    * Trials can now be run multiple times (when their labels appear more than once in shuffleSequence)
    * GetTable().setLabel, GetTable().setItem and GetTable().setGroup now return the table
    * Settings commands 'before' and 'after' now inherit blocking from the commands they execute
    * Scale buttons now save option's index if no label was specified
    * Fixed timer.settings.callback (froze)
    * Fixed key.test.pressed()
    + PennController._AddElementType for developers to design their own element types like text, audio, etc.
    + PennController._AddStandardCommands for developers to add commands to all elements of all types
    + Added PennController.Header and PennController.Footer
    + Added .noHeader and .noFooter methods for PennController
    + Added .log method for PennController, to add columns (previously known as .logAppend, which now adds *lines*)
    + Added .setOption  method for PennController
    + Added new element type: Var
    + Added new element type: Tooltip
    + Added Settings command .slider for Scale elements
    + Added Settings commands .horizontal and .vertical for Scale elements
    + Added Test command .ended for Timer elements
    + Added Action command .stop for Timer elements
    + Added Test command .clicked for Button elements
    + Added Settings command .length for TextInput elements
    + Added Test command .complete and Action command .warn for Html elements
    + Added Settings command .once for Youtube elements
    + Added Test commands .ended and .clicked for Youtube elements
    + Added Test command .printed as Standard
    + Added Settings commands .hidden and .visible as Standard
    + Added Settings command .settings.selector as Standard (added by Selector)
    + Added Action command .setVar as Standard (added by Var)
    + Added options to .settings.log for TextInput, including possibility to record every single key press

DONE
- add a way of dynamically manipulating variables (counter design)

DONE (partly, limitations)
- Add 'controls' for YT (and Audio?)

DONE
- Add a Tooltip Instruction

DONE
- add youtube.settings.once
- add youtube.test.ended
- add button.test.clicked

DONE
- make 'defaults' local
    > use something like PennController.GlobalDefaults() for global defaults?
        (no way of telling from within defaultX whether it is called by PennController() or globally)
    > create 'header' and 'footer'
        can put defaults in header

DONE
- GetTable().setLabel, GetTable().setItem and GetTable().setGroup now return the table

DONE
- Fixed ResetPrefix (was testing type with "text" insteand of "string")

DONE
- added timer.test.ended

DONE
- scale buttons now save index if no label specified

DONE
- key.pressed() now works

DONE
- implemented timer.stop

DONE
- fixed timer.settings.callback (kept being frozen)


// Below: beta 0.2

DONE
- fixed a bug with typeof(element).match that called 'match' directly on 'element'(!?)

DONE
- add .test.is for function elements (tests return value)

DONE
- add .settings.once for Audio (and enable/disable)

DONE
- add .record to VoiceRecorder element (add something that tells signals recording is on)
- add .wait for VoiceRecorder (upon second press on red button)
- add .settings.once for VoiceRecorder (disable recorder after first recording's done)

DONE
- add a way to record fields from an HTML element 

DONE
- defaultText instead of text.defaults

DONE
- fix video automatically starting when first thing on first trial(?)

// Below: beta 0.1

DONE
- Add support for HTML files to the PennController.instruction() function (chunk_includes)
        > maybe rather a PennController.instruction.html()?

DONE (obsolete)
- Revise the SHOW method for Audio
    > currently changes property AFTER creation = no effect

DONE
- Add PLAY and PAUSE/STOP for Audio instructions (revise auto play then? Same for YT?)

DONE 
- Upload the recordings before __SendResults__
    and provide a function to generate a link to download the archive?

DONE
- Add a VoiceRecorder Instruction

DONE
- Create one copy of preloaded element PER INSTRUCTION

DONE
- Rewrite ComplexInstr to add its instructions UPON RUNNING, and only if they're not already part of #bod
[but not done]        > Maybe rename it GroupInstr?

DONE
- Save the timestamps of the first display of the page (handle preload) < preload = only thing not done yet (though first run)
    and the validation of the trial (finishedCallback)

DONE
- Make it possible to check for a subset of preloads (item-label-based)
    > also revise the preloading strategy:
                    right now, callback instructions (for instance) don't add their resources to 'toPreload'
                        (use controller's id instead)
    > How to you prelaod a subset?
            ["label", "PennController", CheckPreload("label1", "label2", ...)]
                    or
            CheckPreload("label1", "label2", ...)       +    shuffleSeq = seq("preload-label1", "label1", "preload-label2", "label2")

DONE
- Make compatible with GetItemsFrom / Rewrite GetItemsFrom as PennController.FeedItems
    [ var table = new PennController.Table("data.csv"[, "\t", "\"", fileringFunction]); ]
    [ table.setItem("Item"); ]      < extra-optional, smart detection
    [ table.setGroup("Group"); ]    < extra-optional, smart detection
    [ table.setLabel("Label"); ]    < extra-optional, smart detection
    PennController.FeedItems([table, ]
        (row) => PennController(
            p(row.question)
            ,
            p(row.delay)
            ,
            p.selector( p.image(row.target) , p.image(row.competitor) )
                .shuffle()
                .keys("F", "J")
        )
    );
    > FUNCTION BECAUSE NEED TO DELAY INSTRUCTION'S CREATION

> Use chunk_includes to upload CSV table, then smart recognition of separator/quotations marks (if not specified)
> let lines = CHUNK_DICT[file].split('\n'); header = lines[0]; table = {};
    for (let h in header) table[h] = []; for (let l in lines) let row = lines[l].split;
    for (let cell in row) table[header[cell]].push(row[cell])
    > Add an if (lines[l].match("\t")) to exlude last, empty line
> CAN MAKE RECOGNITION AUTOMATIC (probe CHUNK_DICT for an entry that resembles a table)

DONE
- Add a Finish/Done/End/… Instruction to (prematurely) go to the next trial/to the end?

DONE: simply used Canvas
- Implement graphic module (Raphael? Outdated... > AllCharts' graphics?)
    add a 'draggable' option (events for drop?)     >> OR SIMPLY USE CANVAS? cf HTML5

DONE:   now only records the actual start
- Add something to check the ACTUAL start-playing of audio/video

DONE
- Add a t.selector instruction
    [DONE] can click on each instruction's element or use a key (how should the keys be set?)
    [DONE] can be just once or as many times
    [DONE] function to enable/disable
    [DONE] callback function with instruction?
    [DONE] t.selector( t("image1.png").id("i1") , t("image2.png").id("i2") ).key( "F", "J" ).save("first image", "second image")

DONE
- Add a way to identify the selected answer in SELECTOR, when shuffled
        > isn't it already the case?     < YES, and now also with ID

DONE
- Check .center() for ComplexInstr

DONE
- Rewrite AUDIOs so they behave the same as RADIOs
    they should record every event for themselves and user decides which to store with the SAVE method

DONE
    >   Re-appending audios to HTML recreates them(?) and FIRES CANPLAYTHROUGH AGAIN!   < Not anymore??
Now bind with 'one' rather than 'bind' (fired only once)

DONE
- Something weird with ComplexInst and wait
- YT: do something about the iframe element

DONE
- Preloading
    DONE(?)     look deeper than the surface folder level for zips
    DONE        (re)append resources to HTML node before finishedCallback

DONE(?)
- Add specifics for MOVE (e.g. ComplexInstr > table)

DONE
- Add _ in front of 'private' methods

DONE
- Add a CLEAR instruction (removes all visible elements from page)

DONE
- Rethink the way that Instructions preload their resources
    have an object whose keys are filenames/urls to (pre)load and values are arrays of Instructions/callback functions?
    will also take care of overriding (because no origin's defined when autopreload)

DONE
- See how running SetElement upon Run() for Audio (and Image?) affected t().j.css() and co
NB: now SPAN element for both Audio and Image, appending resource upon running

DONE
- Add the t.if function


NOTES
- The 'class' keyword is not recognized by early versions of browsers (e.g. my Safari)
    create a copy of the file with other methods?
    >> SOLVED with webpack (I think) but now problem with 'const'

- Unpredictible bugs when same variable name used multiple times (e.g. YT video playback starts)
